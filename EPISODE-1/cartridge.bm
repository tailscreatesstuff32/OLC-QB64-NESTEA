'SUB cartridge (cart AS STRING)
'    DIM vPRGMemory(0) AS _UNSIGNED _BYTE
'    DIM vCHRMemory(0) AS _UNSIGNED _BYTE


'    bImageValid = -1


'    file$ = "mario.nes"
'    OPEN file$ FOR BINARY AS #1
'    GET #1, , header



'    IF header.mapper1 AND &H04 THEN
'        PRINT "has trainer"
'        SEEK #1, 512

'    ELSE
'        PRINT "no trainer"
'    END IF



'    IF header.mapper1 AND &H01 THEN
'        mirror$ = "vertical"
'    ELSE
'        mirror$ = "horizontal"
'    END IF


'    PRINT mirror$

'    nFileType = 1

'    IF nFileType = 0 THEN
'    END IF




'    IF nFileType = 1 THEN
'        nPRGBanks = header.prg_rom_chunks

'        REDIM vPRGMemory(nPRGBanks * 16384)
'        GET #1, , vPRGMemory()


'        nCHRBanks = header.chr_rom_chunks
'        REDIM vCHRMemory(nCHRBanks * 8192)
'        GET #1, , vCHRMemory()


'    END IF


'    PRINT vPRGMemory(0)

'    IF nFileType = 2 THEN
'    END IF



'    bImageValid = 1
'    CLOSE #1

'END SUB
'FUNCTION ImageValid ()

'    ImageValid = bImageValid
'END FUNCTION


SUB cartridge (cart AS STRING)

    DIM vPRGMemory(0) AS _UNSIGNED _BYTE
    DIM vCHRMemory(0) AS _UNSIGNED _BYTE
    DIM nMapperID AS _UNSIGNED _BYTE
    DIM nPRGBanks AS _UNSIGNED _BYTE
    DIM nCHRBanks AS _UNSIGNED _BYTE
    'mapper ????

    _DEST _CONSOLE

    nMapperID = 0
    nPRGBanks = 0
    nCHRBanks = 0

    bImageValid = -1


    file$ = cart

    IF _FILEEXISTS(file$) THEN
        PRINT "found rom"



        OPEN file$ FOR BINARY AS #1


        GET #1, , header
        PRINT header.name_nes


        IF header.mapper1 AND &H04 THEN
            PRINT "has trainer"
            SEEK #1, 512

        ELSE
            PRINT "no trainer"
        END IF



        IF header.mapper1 AND &H01 THEN
            mirror$ = "VERTICAL"
        ELSE
            mirror$ = "HORIZONTAL"
        END IF
        'ONESCREEN_LO
        'ONESCREEN_HI


        PRINT mirror$


        nMapperID = _SHL(_SHR(header.mapper2, 4), 4) OR _SHR(header.mapper1, 4)



        nFileType = 1

        IF header.mapper2 AND &H0C = &H08 THEN
            nFileType = 2
        END IF



        IF nFileType = 0 THEN
        END IF

        IF nFileType = 1 THEN
            PRINT nFileType
            nPRGBanks = header.prg_rom_chunks
            REDIM vPRGMemory(nPRGBanks * 16384 - 1)
            GET #1, , vPRGMemory()
            PRINT LEN(vPRGMemory())

            nCHRBanks = header.chr_rom_chunks
            REDIM vCHRMemory(nCHRBanks * 8192 - 1)
            GET #1, , vCHRMemory()

            IF LEN(vCHRMemory()) = 0 THEN
                PRINT "CHR RAM"
            ELSE
                PRINT LEN(vCHRMemory())

            END IF
        END IF



        ' PRINT vPRGMemory(0)

        IF nFileType = 2 THEN
            PRINT nFileType
        END IF

        SELECT CASE nMapperID

            CASE 0:

                PRINT "valid mapper"

            CASE ELSE:
                PRINT "invalid mapper"
        END SELECT

        bImageValid = 1
        CLOSE #1

    ELSE

        PRINT "rom not found"
    END IF

END SUB


FUNCTION ImageValid ()

    ImageValid = bImageValid
END FUNCTION





