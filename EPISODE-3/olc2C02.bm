SUB ppu_cpuWrite (addr AS _UNSIGNED INTEGER, byte_data AS _UNSIGNED _BYTE)

    SELECT CASE addr

        CASE &H0000 ' control

        CASE &H0001 'mask

        CASE &H0002 'status

        CASE &H0003 'OAM address

        CASE &H0004 'OAM data

        CASE &H0005 'Scroll

        CASE &H0006 'PPU address

        CASE &H0007 'PPU data

    END SELECT



END SUB


FUNCTION ppu_cpuRead (addr AS _UNSIGNED INTEGER, bReadOnly AS _UNSIGNED _BYTE)

    DIM data_ppu AS _UNSIGNED _BYTE

    SELECT CASE addr

        CASE &H0000 ' control

        CASE &H0001 'mask

        CASE &H0002 'status

        CASE &H0003 'OAM address

        CASE &H0004 'OAM data

        CASE &H0005 'Scroll

        CASE &H0006 'PPU address

        CASE &H0007 'PPU data

    END SELECT


END FUNCTION

SUB ConnectCartridge () 'dont need?

    'dont need?

END SUB


SUB ppuWrite (addr AS _UNSIGNED INTEGER, byte_data AS _UNSIGNED _BYTE)

    addr = addr AND &H3FFF~%

    IF cart_ppuWrite(addr, byte_data) THEN

    END IF


END SUB


FUNCTION ppuRead (addr AS _UNSIGNED INTEGER, bReadOnly AS _UNSIGNED _BYTE)

    DIM data_ppu AS _UNSIGNED _BYTE
    data_ppu = &H00

    addr = addr AND &H3FFF~%
    IF cart_ppuRead(addr, byte_data) THEN

    END IF


    ppuRead = data_ppu

END FUNCTION

SUB PPU_clock ()
    'add screen noise

    cycle = cycle + 1
    IF cycle >= 341 THEN
        cycle = 0
        scanline = scanline + 1
        IF scanline <= 261 THEN
            scanline = -1
            frame_complete = 1
        END IF

    END IF


END SUB





